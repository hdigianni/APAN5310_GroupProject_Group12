#Set working dataset
setwd("~/Documents/Columbia Classes/Summer 2022/Group Project")

#Install packages
install.packages('RPostgreSQL')
library('RPostgreSQL')

install.packages("dplyr")
library(dplyr)


#Load driver
driver <- dbDriver('PostgreSQL')

#Create connection
connect <- dbConnect(driver, dbname = "GroupProject1",
                     host = "localhost", port = 5432,
                     user = "postgres", password = 123)

#Create tables
locations <- "
CREATE TABLE locations -- ONE
	(location_id			serial,
	 arrest_boro			varchar(4),
	 x_cord_cd				varchar(10),
	 y_cord_cd				varchar(10),
	 latitiude				varchar(20),
	 longitude				varchar(20),
	 lon_lat				varchar(60),
	 
	 PRIMARY KEY (location_id)
	
	);
"

crime_info <- "
CREATE TABLE crime_info -- TWO
	(crime_id 				serial,
	 pd_cd					varchar(6),
	 pd_desc  		text,
	 ky_cd					varchar(6),
	 ofns_desc			text,
	 law_code				varchar(20),
	 law_cat_cd				varchar(4),
	 
	 PRIMARY KEY (crime_id)
	
	);
"

judge <- "
CREATE TABLE judge -- THREE
	(judge_id				serial,
	 judge_fname			varchar(20),
	 judge_lname			varchar(20),
	 court					varchar(20),
	 
	 PRIMARY KEY (judge_id)
	 	
	);
"

case_ruling <- "
CREATE TABLE case_ruling -- FOUR
	(case_ruling_id			serial,
	 ruling					varchar(10),
	 ruling_desc			text,
	 judge_id				serial,
	 
	 PRIMARY KEY (case_ruling_id),
	 FOREIGN KEY (judge_id) REFERENCES judge (judge_id)
		
	);
"

perp <- "
CREATE TABLE perp -- FIVE
	(perp_id				serial,
	 perp_age_group			varchar(8),
	 perp_sex				varchar(12),
	 perp_race				varchar(10),

	 PRIMARY KEY (perp_id),
	 );
"

presinct <- "
CREATE TABLE precinct -- SIX
	(precinct_id			serial,
	 precinct_name 			varchar(20),
	 precinct_phone			varchar(20),

	 PRIMARY KEY (precinct_id),
	);
"

arrest_officer <- "	
CREATE TABLE arrest_officer -- SEVEN
	(officer_badge_id		serial,
	 precinct_id			serial,
	 officer_fname			varchar(20),
	 officer_lname			varchar(20),
	 officer_contact_no		varchar(20),

	 PRIMARY KEY (officer_badge_id),
	 FOREIGN KEY (precinct_id) REFERENCES precinct (precinct_id),
	);
"

training <- "	
CREATE TABLE training -- EIGHT
	(training_id			serial,
	 training_type			varchar(10),
	 training_level			varchar(10),
	 
	 PRIMARY KEY (training_id)
	
	);
"	

officer_training <- "	
CREATE TABLE officer_training -- NINE
	(training_id			serial,
	 officer_badge_id		serial,
	 training_date			date,
	 
	 PRIMARY KEY (training_id, officer_badge_id, training_date)
	
	);
"

ranks <- "	
CREATE TABLE ranks -- TEN
	(rank_id				serial,
	 rank_type				varchar(20),
	 rank_description		text,
	 
	 PRIMARY KEY (rank_id)
	
	);
"

officer_ranks <- "
CREATE TABLE officer_ranks -- ELEVEN
	(rank_id				serial,
	 officer_badge_id		serial,

	 PRIMARY KEY (rank_id, officer_badge_id, rank_date)
	
	);
"

languages <- "	
CREATE TABLE languages -- TWELVE
	(language_id			serial,
	 language_type			varchar(20),
	 
	 PRIMARY KEY (language_id, language_type)
	
	);
"

officer_languages <- "
CREATE TABLE officer_language -- THIRTEEN
	(officer_badge_id		serial,
	language_id				serial,

	PRIMARY KEY (officer_badge_id, language_id)

	);
"

weapon <- "
CREATE TABLE weapon -- FOURTEEN
	(weapon_id 				serial,
	 weapon_type			varchar(20),
	 weapon_description		text,
	 crime_id				serial,
	 
	 PRIMARY KEY (weapon_id),
	 FOREIGN KEY (crime_id) REFERENCES crime_info (crime_id) 
	
	);
"

victim <- "
CREATE TABLE victim -- FIFTEEN
	(victim_id				serial,
	 victim_gender			varchar(12),
	 victim_race			varchar(10),
	 victim_age				integer,
	 crime_id				serial,
	 
	 PRIMARY KEY (victim_id),
	 FOREIGN KEY (crime_id) REFERENCES crime_info (crime_id) 
	
	);
"

arrest <- "	
CREATE TABLE arrest -- SIXTEEN
	(arrest_key				varchar(20), -- Not serial as the key is randomly generated as part of the dataset
	 arrest_date			date,
 	 location_id			serial,
	 crime_id				serial,
	 perp_id				serial,
	 officer_badge_id		serial,
	 case_ruling_id			serial,
	 
	 PRIMARY KEY (arrest_key),
	 FOREIGN KEY (location_id) REFERENCES locations (location_id),
	 FOREIGN KEY (crime_id) REFERENCES crime_info (crime_id),
	 FOREIGN KEY (perp_id) REFERENCES perp (perp_id),
	 FOREIGN KEY (officer_badge_id) REFERENCES arrest_officer (officer_badge_id),
	 FOREIGN KEY (case_ruling_id) REFERENCES case_ruling (case_ruling_id)
	 
 	);
"

substances <- "
CREATE TABLE substances -- SEVENTEEN
	(substance_id 			serial,
	 substabce_street_name	varchar(40),
	 arrest_key				varchar(20),
	 
	 PRIMARY KEY (substance_id),
	 FOREIGN KEY (arrest_key) REFERENCES arrest (arrest_key)
	
	);
"
	
substances_at_arrest <- "
CREATE TABLE substances_at_arrest -- EIGHTEEN
	(substance_id 			serial,
	 arrest_key				varchar(20),
	 
	 PRIMARY KEY (substance_id, arrest_key)
	
	);
"

#Execute create table statement
dbGetQuery(connect, locations)
dbGetQuery(connect, crime_info)
dbGetQuery(connect, judge)
dbGetQuery(connect, case_ruling)
dbGetQuery(connect, perp)
dbGetQuery(connect, presinct)
dbGetQuery(connect, arrest_officer)
dbGetQuery(connect, training)
dbGetQuery(connect, officer_training)
dbGetQuery(connect, ranks)
dbGetQuery(connect, officer_ranks)
dbGetQuery(connect, languages)
dbGetQuery(connect, officer_languages)
dbGetQuery(connect, weapon)
dbGetQuery(connect, victim)
dbGetQuery(connect, arrest)
dbGetQuery(connect, substances)
dbGetQuery(connect, substances_at_arrest)


#Load data
arrest_data <- read.csv('/Users/hayley/Documents/Columbia Classes/Summer 2022/Group Project/NYPD_Arrests_Data__Historic.csv')
court_data <- read.csv('/Users/hayley/Documents/Columbia Classes/Summer 2022/Group Project/court_data.csv')


#Filter data to create subset
arrest_data_dates <- mutate(arrest_data, ArrestDate = as.Date(ARREST_DATE, format= "%m/%d/%Y"))
arrest_data <- arrest_data_dates %>% filter(ArrestDate >= '2020-01-01')
arrest_data <- arrest_data %>% top_n(1000)

#Transform and load location table
location_data <- data.frame('location' = unique(arrest_data$Lon_Lat))
location_data$location_id <- 1:nrow(location_data)
location_id_list <- sapply(arrest_data$Lon_Lat, function(x) location_data$location_id[location_data$location == x])
arrest_data$location_id <- location_id_list
location <- data.frame('location' = arrest_data$location_id, arrest_data$Lon_Lat, arrest_data$ARREST_BORO,
                       arrest_data$X_COORD_CD, arrest_data$Y_COORD_CD, arrest_data$Latitude, arrest_data$Longitude)
dbWriteTable(connect, name="location", value=location, row.names=FALSE, append=TRUE)

  
#Transform and load crime_info table
crime_info_data <- data.frame('Crime_Info' = unique(arrest_data$ARREST_KEY))
crime_info_data$crime_id <- 1:nrow(crime_info_data)
crime_info_list <- sapply(arrest_data$ARREST_KEY, 
                          function(x) crime_info_data$crime_id[crime_info_data$Crime_Info == x])
arrest_data$crime_id <- crime_info_list
crime_info <- data.frame('crime_info' = arrest_data$crime_id, arrest_data$PD_CD, arrest_data$PD_DESC,
                         arrest_data$KY_CD, arrest_data$OFNS_DESC, arrest_data$LAW_CODE, arrest_data$LAW_CAT_CD)
dbWriteTable(connect, name="crime_info", value=crime_info, row.names=FALSE, append=TRUE)


#Transform and load judge table
judge_data <- data.frame('judge' = unique(court_data$judge_lname))
judge_data$judge_id <- 1:nrow(judge_data)
judge_list <- sapply(court_data$judge_lname, 
                            function(x) judge_data$judge_id[judge_data$judge == x])
court_data$judge_id <- judge_list
judge <- data.frame('judge' = court_data$judge_id, court_data$judge_fname, court_data$judge_lname, court_data$court)
dbWriteTable(connect, name="judge", value=judge, row.names=FALSE, append=TRUE)



#Transform and load case_ruling table
case_ruling_data <- data.frame('case_ruling' = unique(court_data$ruling_desc))
case_ruling_data$case_ruling_id <- 1:nrow(case_ruling_data)
case_ruling_list <- sapply(court_data$ruling_desc, 
                     function(x) case_ruling_data$case_ruling_id[case_ruling_data$case_ruling == x])
court_data$case_ruling_id <- case_ruling_list
case_ruling <- data.frame('case_ruling' = court_data$case_ruling_id, court_data$ruling, court_data$ruling_desc, 
                          court_data$judge_id)
dbWriteTable(connect, name="case_ruling", value=case_ruling, row.names=FALSE, append=TRUE)


  
#Transform and load perp table
perp_data <- data.frame('perp' = unique(arrest_data$ARREST_KEY))
perp_data$perp_id <- 1:nrow(perp_data)
perp_list <- sapply(arrest_data$ARREST_KEY, 
                             function(x) perp_data$perp_id[perp_data$perp == x])
arrest_data$perp_id <- perp_list
perp <- data.frame('perp' = arrest_data$perp_id, arrest_data$AGE_GROUP, arrest_data$PERP_SEX, 
                            arrest_data$PERP_RACE)
dbWriteTable(connect, name="perp", value=perp, row.names=FALSE, append=TRUE)  



#Transform and load presinct table
presinct <- data.frame('presinct' = court_data$presinct_id, court_data$presinct_name, court_data$presinct_phone)
dbWriteTable(connect, name="perp", value=perp, row.names=FALSE, append=TRUE)  



#Transform and load arrest_officer table
arrest_officer_data <- data.frame('arrest_officer' = unique(court_data$officer_contact_no))
arrest_officer_data$officer_badge_id <- 1:nrow(arrest_officer_data)
arrest_officer_list <- sapply(court_data$officer_contact_no, 
                    function(x) arrest_officer_data$officer_badge_id[arrest_officer_data$arrest_officer == x])
court_data$officer_badge_id <- arrest_officer_list
arrest_officer <- data.frame('arrest_officer' = court_data$officer_badge_id, court_data$presinct_id, 
                             court_data$officer_fname, court_data$officer_lname, court_data$officer_contact_no)
dbWriteTable(connect, name="arrest_officer", value=arrest_officer, row.names=FALSE, append=TRUE)  



#Transform and load training table
training_data <- data.frame('training' = unique(court_data$training_type))
training_data$training_id <- 1:nrow(training_data)
training_list <- sapply(court_data$training_type, 
                                function(x) training_data$training_id[training_data$training == x])
court_data$training_id <- training_list
training <- data.frame('training' = court_data$training_id, court_data$training_type, 
                               court_data$training_level)
dbWriteTable(connect, name="training", value=training, row.names=FALSE, append=TRUE)



#Transform and load officer_training table
officer_training <- data.frame('officer_training' = court_data$training_id, court_data$officer_badge_id)
dbWriteTable(connect, name="officer_training", value=officer_training, row.names=FALSE, append=TRUE)



#Transform and load rank table
rank_data <- data.frame('rank' = unique(court_data$rank_type))
rank_data$rank_id <- 1:nrow(rank_data)
rank_list <- sapply(court_data$rank_type, 
                        function(x) rank_data$rank_id[rank_data$rank == x])
court_data$rank_id <- rank_list
rank <- data.frame('rank' = court_data$rank_id, court_data$rank_type, 
                       court_data$rank_description)
dbWriteTable(connect, name="training", value=training, row.names=FALSE, append=TRUE)



#Transform and load officer_rank table
officer_rank <- data.frame('officer_rank' = court_data$rank_id, court_data$officer_badge_id)
dbWriteTable(connect, name="officer_rank", value=officer_rank, row.names=FALSE, append=TRUE)



#Transform and load languages table
languages_data <- data.frame('languages' = unique(court_data$language_type))
languages_data$languages_id <- 1:nrow(languages_data)
languages_list <- sapply(court_data$language_type, 
                      function(x) languages_data$languages_id[languages_data$languages == x])
court_data$languages_id <- languages_list
languages <- data.frame('rank' = court_data$languages_id, court_data$language_type)
dbWriteTable(connect, name="language", value=languages, row.names=FALSE, append=TRUE)



#Transform and load officer_language table
officer_language <- data.frame('officer_language' = court_data$languages_id, court_data$officer_badge_id)
dbWriteTable(connect, name="officer_language", value=officer_language, row.names=FALSE, append=TRUE)


  
#Transform and load weapon table
weapon_data <- data.frame('weapon' = unique(court_data$weapon_type))
weapon_data$weapon_id <- 1:nrow(weapon_data)
weapon_list <- sapply(court_data$weapon_type, 
                           function(x) weapon_data$weapon_id[weapon_data$weapon == x])
court_data$weapon_id <- weapon_list
weapon <- data.frame('weapon' = court_data$weapon_id, court_data$weapon_type, court_data$weapon_description,
                     arrest_data$crime_id)
dbWriteTable(connect, name="weapon", value=weapon, row.names=FALSE, append=TRUE)


  
#Transform and load victim table
victim_data <- data.frame('victim' = unique(court_data$ARREST_KEY))
victim_data$victim_id <- 1:nrow(victim_data)
victim_list <- sapply(court_data$ARREST_KEY, 
                        function(x) victim_data$victim_id[victim_data$victim == x])
court_data$victim_id <- victim_list
victim <- data.frame('victim' = court_data$victim_id, court_data$victim_gender, court_data$victim_race,
                       court_data$victim_age, arrest_data$crime_id)
dbWriteTable(connect, name="victim", value=victim, row.names=FALSE, append=TRUE)

  
  
#Transform and load arrest table
arrest <- data.frame('arrest' = arrest_data$ARREST_KEY, arrest_data$ArrestDate, arrest_data$location_id
                     arrest_data$crime_id, arrest_data$perp_id, court_data$officer_badge_id, 
                     court_data$case_ruling_id)
dbWriteTable(connect, name="arrest", value=arrest, row.names=FALSE, append=TRUE)


  
#Transform and load substance table
substance_data <- data.frame('substance' = unique(court_data$substance_street_name))
substance_data$substance_id <- 1:nrow(substance_data)
substance_list <- sapply(court_data$substance_street_name, 
                        function(x) substance_data$substance_id[substance_data$substance == x])
court_data$substance_id <- substance_list
substance <- data.frame('substance' = court_data$substance_id, court_data$substance_street_name, 
                        court_data$ARREST_KEY)
dbWriteTable(connect, name="substance", value=substance, row.names=FALSE, append=TRUE)


  
#Transform and load substance_at_arrest table
substance_at_arrest <- data.frame('substance_ata_rrest' = court_data$substance_id, court_data$ARREST_KEY)
dbWriteTable(connect, name="substance_at_arrest", value=substance_at_arrest, row.names=FALSE, append=TRUE)
  
